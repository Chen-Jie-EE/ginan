clear;

ephFileC = 'GFOC_RL02_22001.xyz';           % retrieved from ephemeris, e.g. SP3, SCA, etc.
ephFileD = 'GFOD_RL02_22001.xyz';           % retrieved from ephemeris, e.g. SP3, SCA, etc.
attFileC = 'GFOC_RL02_22001.att';           % generated by debugAttitude()
attFileD = 'GFOD_RL02_22001.att';           % generated by debugAttitude()
gifFile  = 'GRACE_FO_RL02_19044_body.gif';	% output gif file

ephUnit = 1e3;      % unit of ephemeris: km == 1e3, m == 1

scaleEarth = 1;     % scale factor of plotted Earth
scaleAxis  = 8e4;   % scale factor of plotted axes

delay = 0.2;       % animation refresh interval

eph = load(ephFileC);
t_C  = eph(281:end,1:2);  % GPS time
r_C  = eph(281:end,3:5);  % sat pos

eph = load(ephFileD);
t_D  = eph(281:end,1:2);  % GPS time
r_D  = eph(281:end,3:5);  % sat pos

att = load(attFileC);
eX_C = att(281:end, 3: 5);
eY_C = att(281:end, 6: 8);
eZ_C = att(281:end, 9:11);

att = load(attFileD);
eX_D = att(281:end, 3: 5);
eY_D = att(281:end, 6: 8);
eZ_D = att(281:end, 9:11);

dX_C = eX_C*scaleAxis;
dY_C = eY_C*scaleAxis;
dZ_C = eZ_C*scaleAxis;

dX_D = eX_D*scaleAxis;
dY_D = eY_D*scaleAxis;
dZ_D = eZ_D*scaleAxis;

X_C = r_C + dX_C;
Y_C = r_C + dY_C;
Z_C = r_C + dZ_C;

X_D = r_D + dX_D;
Y_D = r_D + dY_D;
Z_D = r_D + dZ_D;

figure('unit', 'normalized', 'position', [0, 0, 1, 1]);
hold on;
axis equal;
axis off;
box off;

RE = 6371000*scaleEarth;

load topo;
axesm('globe', 'grid', 'on', 'galtitude', RE);
meshm(topo, topolegend, [], RE);
% demcmap(topo);

xlim((r_C(1,1)+r_D(1,1))/2 + [-1.5e7, 1.5e7]);
ylim((r_C(1,2)+r_D(1,2))/2 + [-1.5e7, 1.5e7]);
zlim((r_C(1,3)+r_D(1,3))/2 + [-1.5e7, 1.5e7]);
    
az = rad2deg(atan2(r_C(1,2), r_C(1,1))) + 90;
el = 0;
view(az, el);
zoom(50);

orbit_C = plot3(r_C(1,1), r_C(1,2), r_C(1,3), 'c');
sat_C   = scatter3(r_C(1,1), r_C(1,2), r_C(1,3), 'filled');
radial_C= plot3([0; r_C(1,1)], [0; r_C(1,2)], [0; r_C(1,3)], 'm--');

orbit_D = plot3(r_D(1,1), r_D(1,2), r_D(1,3), 'c');
sat_D   = scatter3(r_D(1,1), r_D(1,2), r_D(1,3), 'filled');
radial_D= plot3([0; r_D(1,1)], [0; r_D(1,2)], [0; r_D(1,3)], 'm--');

axisX_C = quiver3(r_C(1,1), r_C(1,2), r_C(1,3), dX_C(1,1), dX_C(1,2), dX_C(1,3), 'r');
axisY_C = quiver3(r_C(1,1), r_C(1,2), r_C(1,3), dY_C(1,1), dY_C(1,2), dY_C(1,3), 'g');
axisZ_C = quiver3(r_C(1,1), r_C(1,2), r_C(1,3), dZ_C(1,1), dZ_C(1,2), dZ_C(1,3), 'b');

axisX_D = quiver3(r_D(1,1), r_D(1,2), r_D(1,3), dX_D(1,1), dX_D(1,2), dX_D(1,3), 'r');
axisY_D = quiver3(r_D(1,1), r_D(1,2), r_D(1,3), dY_D(1,1), dY_D(1,2), dY_D(1,3), 'g');
axisZ_D = quiver3(r_D(1,1), r_D(1,2), r_D(1,3), dZ_D(1,1), dZ_D(1,2), dZ_D(1,3), 'b');

textX_C = text(X_C(1,1), X_C(1,2), X_C(1,3), 'X_b');
textY_C = text(Y_C(1,1), Y_C(1,2), Y_C(1,3), 'Y_b');
textZ_C = text(Z_C(1,1), Z_C(1,2), Z_C(1,3), 'Z_b');

textX_D = text(X_D(1,1), X_D(1,2), X_D(1,3), 'X_b');
textY_D = text(Y_D(1,1), Y_D(1,2), Y_D(1,3), 'Y_b');
textZ_D = text(Z_D(1,1), Z_D(1,2), Z_D(1,3), 'Z_b');

eR_C(1,:) = r_C(1,:)/norm(r_C(1,:));

eR_D(1,:) = r_D(1,:)/norm(r_D(1,:));

info  = sprintf('Mission: GRACE-FO\nGPS Week: %d\nSec of Week: %8.1f\n\nGRACE-C\nSat Pos: %12.3f %12.3f %12.3f\neX_b: %9.6f %9.6f %9.6f\neY_b: %9.6f %9.6f %9.6f\neZ_b: %9.6f %9.6f %9.6f\neZ_b*eSat = %9.6f\n\nGRACE-D\nSat Pos: %12.3f %12.3f %12.3f\neX_b: %9.6f %9.6f %9.6f\neY_b: %9.6f %9.6f %9.6f\neZ_b: %9.6f %9.6f %9.6f\neZ_b*eSat = %9.6f', ...
    t_C (1,1), t_C (1,2), ...
    r_C (1,1), r_C (1,2), r_C (1,3), ...
    eX_C(1,1), eX_C(1,2), eX_C(1,3), ...
    eY_C(1,1), eY_C(1,2), eY_C(1,3), ...
    eZ_C(1,1), eZ_C(1,2), eZ_C(1,3), ...
    dot(eZ_C(1,:), eR_C(1,:)), ...
    r_D (1,1), r_D (1,2), r_D (1,3), ...
    eX_D(1,1), eX_D(1,2), eX_D(1,3), ...
    eY_D(1,1), eY_D(1,2), eY_D(1,3), ...
    eZ_D(1,1), eZ_D(1,2), eZ_D(1,3), ...
    dot(eZ_D(1,:), eR_D(1,:)));
dash  = annotation('textbox', [0.7 0.8 0 0], 'string', info, 'fitboxtotext', 'on');

for i = 1:length(t_C)
    
    xlim((r_C(i,1)+r_D(i,1))/2 + [-1.5e7, 1.5e7]);
    ylim((r_C(i,2)+r_D(i,2))/2 + [-1.5e7, 1.5e7]);
    zlim((r_C(i,3)+r_D(i,3))/2 + [-1.5e7, 1.5e7]);
    
    az = rad2deg(atan2(r_C(i,2), r_C(i,1))) + 90;
    el = 0;
    view(az, el);

    eR_C(i,:) = r_C(i,:)/norm(r_C(i,:));
	
    eR_D(i,:) = r_D(i,:)/norm(r_D(i,:));
    
    info  = sprintf('Mission: GRACE-FO\nGPS Week: %d\nSec of Week: %8.1f\n\nGRACE-C\nSat Pos: %12.3f %12.3f %12.3f\neX_b: %9.6f %9.6f %9.6f\neY_b: %9.6f %9.6f %9.6f\neZ_b: %9.6f %9.6f %9.6f\neZ_b*eSat = %9.6f\n\nGRACE-D\nSat Pos: %12.3f %12.3f %12.3f\neX_b: %9.6f %9.6f %9.6f\neY_b: %9.6f %9.6f %9.6f\neZ_b: %9.6f %9.6f %9.6f\neZ_b*eSat = %9.6f', ...
        t_C (i,1), t_C (i,2), ...
        r_C (i,1), r_C (i,2), r_C (i,3), ...
        eX_C(i,1), eX_C(i,2), eX_C(i,3), ...
        eY_C(i,1), eY_C(i,2), eY_C(i,3), ...
        eZ_C(i,1), eZ_C(i,2), eZ_C(i,3), ...
        dot(eZ_C(i,:), eR_C(i,:)), ...
        r_D (i,1), r_D (i,2), r_D (i,3), ...
        eX_D(i,1), eX_D(i,2), eX_D(i,3), ...
        eY_D(i,1), eY_D(i,2), eY_D(i,3), ...
        eZ_D(i,1), eZ_D(i,2), eZ_D(i,3), ...
        dot(eZ_D(i,:), eR_D(i,:)));
    set(dash, 'string', info);
    
    set(orbit_C, 'xdata', r_C(1:i,1), 'ydata', r_C(1:i,2), 'zdata', r_C(1:i,3));
    set(sat_C,   'xdata', r_C(i,1),   'ydata', r_C(i,2),   'zdata', r_C(i,3));
    set(radial_C,'xdata', [0; r_C(i,1)], 'ydata', [0; r_C(i,2)], 'zdata', [0; r_C(i,3)]);
    
    set(orbit_D, 'xdata', r_D(1:i,1), 'ydata', r_D(1:i,2), 'zdata', r_D(1:i,3));
    set(sat_D,   'xdata', r_D(i,1),   'ydata', r_D(i,2),   'zdata', r_D(i,3));
    set(radial_D,'xdata', [0; r_D(i,1)], 'ydata', [0; r_D(i,2)], 'zdata', [0; r_D(i,3)]);
    
    set(axisX_C, 'xdata', r_C(i,1), 'ydata', r_C(i,2), 'zdata', r_C(i,3), 'udata', dX_C(i,1), 'vdata', dX_C(i,2), 'wdata', dX_C(i,3));
    set(axisY_C, 'xdata', r_C(i,1), 'ydata', r_C(i,2), 'zdata', r_C(i,3), 'udata', dY_C(i,1), 'vdata', dY_C(i,2), 'wdata', dY_C(i,3));
    set(axisZ_C, 'xdata', r_C(i,1), 'ydata', r_C(i,2), 'zdata', r_C(i,3), 'udata', dZ_C(i,1), 'vdata', dZ_C(i,2), 'wdata', dZ_C(i,3));
    
    set(axisX_D, 'xdata', r_D(i,1), 'ydata', r_D(i,2), 'zdata', r_D(i,3), 'udata', dX_D(i,1), 'vdata', dX_D(i,2), 'wdata', dX_D(i,3));
    set(axisY_D, 'xdata', r_D(i,1), 'ydata', r_D(i,2), 'zdata', r_D(i,3), 'udata', dY_D(i,1), 'vdata', dY_D(i,2), 'wdata', dY_D(i,3));
    set(axisZ_D, 'xdata', r_D(i,1), 'ydata', r_D(i,2), 'zdata', r_D(i,3), 'udata', dZ_D(i,1), 'vdata', dZ_D(i,2), 'wdata', dZ_D(i,3));
    
    set(textX_C, 'position', [X_C(i,1), X_C(i,2), X_C(i,3)]);
    set(textY_C, 'position', [Y_C(i,1), Y_C(i,2), Y_C(i,3)]);
    set(textZ_C, 'position', [Z_C(i,1), Z_C(i,2), Z_C(i,3)]);
    
    set(textX_D, 'position', [X_D(i,1), X_D(i,2), X_D(i,3)]);
    set(textY_D, 'position', [Y_D(i,1), Y_D(i,2), Y_D(i,3)]);
    set(textZ_D, 'position', [Z_D(i,1), Z_D(i,2), Z_D(i,3)]);
    
    pause(delay);
    
    frame = getframe(gcf);
    im = frame2im(frame);
    [imind, cm] = rgb2ind(im, 256);
    if i == 1
        imwrite(imind, cm, gifFile, 'gif', 'loopcount', inf, 'delaytime', delay);
    elseif mod(i, 5) == 1
        imwrite(imind, cm, gifFile, 'gif', 'writemode', 'append', 'delaytime', delay);
    end
end
